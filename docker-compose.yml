services:
  kafka:
    image: apache/kafka:3.7.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: EXTERNAL://0.0.0.0:9092,INTERNAL://0.0.0.0:29092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:9092,INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: unless-stopped

  kafka-init:
    image: bitnami/kafka:3.7.0
    depends_on:
      - kafka
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "
      echo 'Aguardando Kafka subir...' &&
      sleep 10 &&
      kafka-topics.sh --bootstrap-server kafka:29092 --create --if-not-exists --topic consulta_credito --partitions 1 --replication-factor 1 &&
      echo 'TÃ³pico consulta_credito criado com sucesso!'
      "
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: ""

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    depends_on:
      - kafka
    restart: unless-stopped

  postgres:
    image: postgres
    container_name: postgres-consulta-credito
    environment:
      POSTGRES_DB: consulta_credito
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

  db-init:
    image: postgres
    depends_on:
      - postgres
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "
      until pg_isready -h postgres -U postgres; do
        echo 'Aguardando PostgreSQL...';
        sleep 2;
      done;
      psql -h postgres -U postgres -d consulta_credito -c \"
        CREATE TABLE IF NOT EXISTS credito (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY,
          numero_credito VARCHAR(50) NOT NULL,
          numero_nfse VARCHAR(50) NOT NULL,
          data_constituicao DATE NOT NULL,
          valor_issqn DECIMAL(15, 2) NOT NULL,
          tipo_credito VARCHAR(50) NOT NULL,
          simples_nacional BOOLEAN NOT NULL,
          aliquota DECIMAL(5, 2) NOT NULL,
          valor_faturado DECIMAL(15, 2) NOT NULL,
          valor_deducao DECIMAL(15, 2) NOT NULL,
          base_calculo DECIMAL(15, 2) NOT NULL
        );\" &&
      psql -h postgres -U postgres -d consulta_credito -c \"
        INSERT INTO credito (numero_credito, numero_nfse, data_constituicao, valor_issqn, tipo_credito, simples_nacional, aliquota, valor_faturado, valor_deducao, base_calculo) VALUES
        ('123456', '7891011', '2024-02-25', 1500.75, 'ISSQN', true, 5.0, 30000.00, 5000.00, 25000.00),
        ('789012', '7891011', '2024-02-26', 1200.50, 'ISSQN', false, 4.5, 25000.00, 4000.00, 21000.00),
        ('654321', '1122334', '2024-01-15', 800.50, 'Outros', true, 3.5, 20000.00, 3000.00, 17000.00);
      \"
      "
    environment:
      PGPASSWORD: postgres

  consulta-credito-api:
    image: consulta-credito-api
    container_name: consulta-credito-api
    ports:
      - "8080:8080"
    environment:
      KAFKA_BOOTSTRAP_SERVER: kafka:29092
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/consulta_credito
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      - kafka
      - kafka-init
      - postgres
    restart: unless-stopped

  consulta-credito-web:
    image: consulta-credito-web
    container_name: consulta-credito-web
    ports:
      - "4200:80"
    depends_on:
      - kafka
    restart: unless-stopped